package xyz.duncanruns.julti.benchmarkplugin.gui;

import xyz.duncanruns.julti.benchmarkplugin.BenchmarkOptions;
import xyz.duncanruns.julti.benchmarkplugin.BenchmarkResetManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;

public class BenchmarkPluginGUI extends JFrame {
    private boolean closed = false;
    private JButton resetGoalButton;
    private JPanel mainPanel;
    private JButton startBenchmarkButton;
    private JButton endBenchmarkButton;

    public BenchmarkPluginGUI() {
        this.setContentPane(mainPanel);
        this.setTitle("Julti Benchmark Options");
        this.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                BenchmarkPluginGUI.this.onClose();
            }
        });
        refreshResetGoalButton();
        resetGoalButton.addActionListener(ignored -> {
            Object out = JOptionPane.showInputDialog(this, "Enter a reset goal.", "Julti Benchmark: New Reset Goal", JOptionPane.QUESTION_MESSAGE, null, null, String.valueOf(BenchmarkOptions.getBenchmarkOptions().resetGoal));
            if (out == null) return;
            try {
                int outInt = Integer.parseInt(out.toString());
                if (outInt < 1) {
                    showInvalidInput();
                    return;
                }
                BenchmarkOptions.getBenchmarkOptions().resetGoal = outInt;
                BenchmarkOptions.save();
                refreshResetGoalButton();
            } catch (NumberFormatException e) {
                showInvalidInput();
                return;
            }
        });
        startBenchmarkButton.addActionListener(ignored -> {
            BenchmarkResetManager.getBenchmarkResetManager().startBenchmark();
        });

        endBenchmarkButton.addActionListener(ignored -> BenchmarkResetManager.getBenchmarkResetManager().endBenchmark());
        this.setSize(400, 80);
        this.setVisible(true);
    }

    private void refreshResetGoalButton() {
        resetGoalButton.setText("Reset Goal: " + BenchmarkOptions.getBenchmarkOptions().resetGoal);
    }

    private void showInvalidInput() {
        JOptionPane.showMessageDialog(this, "You did not input a positive number.", "Julti Benchmark: Invalid Input", JOptionPane.ERROR_MESSAGE);
    }

    private void onClose() {
        this.closed = true;
    }

    public boolean isClosed() {
        return closed;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        resetGoalButton = new JButton();
        resetGoalButton.setText("Reset Goal: ");
        mainPanel.add(resetGoalButton);
        startBenchmarkButton = new JButton();
        startBenchmarkButton.setText("Start Benchmark");
        mainPanel.add(startBenchmarkButton);
        endBenchmarkButton = new JButton();
        endBenchmarkButton.setText("End Benchmark");
        mainPanel.add(endBenchmarkButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }

}
